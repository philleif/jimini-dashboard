extends layout

block content
  .container
    #positions
      h1 Jimini
      h2 {{ time }}
      h5.text-gray Next run in {{ eta }}
      hr
      .columns
        .column.col-4
          .centered
            h5.label Net Profit:
          #total-summary
            h1(v-bind:class="[ net > 0 ? 'green' : 'red' ]") ${{ net }}
      hr
      .columns
        .column.col-4
          h5.label Open Positions:
          ul
            open-position-list-item(v-for="position in positions.open",
              v-bind:position="position")
        .column.col-8
          h5.label Latest Closed Positions:
          ul
            closed-position-list-item(v-for="position in positions.closed.slice(0,6)",
              v-bind:position="position", v-bind:class="[ position.net > 0 ? 'green' : 'red' ]")

  script.
    Vue.component('open-position-list-item', {
      props: ['position'],
      template: '<li>{{ position.pair }} {{ position.amount }} @ \
        ${{ position.openPrice }} (${{ Math.round(position.amount * position.openPrice) }})</li>'
    })

    Vue.component('closed-position-list-item', {
      props: ['position'],
      template: "<li><small class='text-gray'> \
        {{ `${new Date(position.time)}` }}</small> <br />\
        {{ position.pair }} {{ position.amount }} @ \
        ${{ position.openPrice }}/{{ position.closePrice }} \
        (${{ Math.round(position.net) }})</div></li>"
    })

    let positions = new Vue({
      el: '#positions',
      data: {
        positions: {closed: [], open: []},
        net: 0,
        interval: null,
        time: null,
        eta: null
      },
      methods: {
        loadData: function () {
          axios.get('/positions').then(response => {
            this.positions = response.data.positions
            this.time = Date()
            this.net = 0

            for (let p of this.positions.closed) {
              this.net += Math.round(p.amount * (p.closePrice - p.openPrice))
            }
          })

          axios.get('/jobs').then(response => {
            this.eta = Math.round(response.data.jobs.next/1000) + ' seconds'
          })
        }
      },
      created: function () {
        this.loadData()

        setInterval(function () {
          this.loadData()
        }.bind(this), 2500)
      }
    })